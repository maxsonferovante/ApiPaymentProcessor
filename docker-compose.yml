services:
  postgres:
    image: postgres:17-alpine
    environment:
      POSTGRES_DB: rinha
      POSTGRES_USER: user
      POSTGRES_PASSWORD: rinha2025
    ports:
      - "5433:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - ./postgresql.conf:/etc/postgresql/postgresql.conf:ro
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d rinha"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 70M

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 70M

  app-native-1:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: jdbc:postgresql://postgres:5432/rinha
      DATABASE_USERNAME: user
      DATABASE_PASSWORD: rinha2025
      REDIS_HOST: redis
      REDIS_PORT: 6379
      HIKARI_MAXIMUM_POOL_SIZE: 8
      HIKARI_MINIMUM_IDLE: 2
      HIKARI_CONNECTION_TIMEOUT: 8000
      REDIS_TIMEOUT: 500ms
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 70M

  app-native-2:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: jdbc:postgresql://postgres:5432/rinha
      DATABASE_USERNAME: user
      DATABASE_PASSWORD: rinha2025
      REDIS_HOST: redis
      REDIS_PORT: 6379
      HIKARI_MAXIMUM_POOL_SIZE: 8
      HIKARI_MINIMUM_IDLE: 2
      HIKARI_CONNECTION_TIMEOUT: 8000
      REDIS_TIMEOUT: 500ms
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 70M

  nginx:
    image: nginx:alpine
    ports:
      - "9999:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app-native-1
      - app-native-2
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 70M

networks:
  backend:
    driver: bridge
    name: backend
  payment-processor:
    external: true
